function [EnvironmentConditions, ...
            LogEnvironment, ...
            EnvironmentStatesDerivatives] ...
            = environment(EnvironmentConditions, ...
                            LogEnvironment, ...
                            EnvironmentStatesDerivatives, ...
                            PlantOutputs, ...
                            simulation_time__s, ...
                            EnvironmentStates, ...
                            ParametersEnvironment)

%% Extract Inputs

%% Atmosphere
% Call model
[mass_density__kg_per_m3,  number_density__1_per_m3, temperature__K] ...
            = Nrlmsise00.execute([6.378e6 + 200e3;0;0], ...
                                    [1;0;0;0], ...
                                    60733, ...
                                    ParametersEnvironment.Nrlmsise00);

% Set output
EnvironmentConditions.EarthAtmosphere.temperature__K = temperature__K;
EnvironmentConditions.EarthAtmosphere.mass_density__kg_per_m3 = mass_density__kg_per_m3;
EnvironmentConditions.EarthAtmosphere.number_density__1_per_m3 = number_density__1_per_m3;

%% States Derivatives
% no states -> EnvironmentStatesDerivatives can stay unaltered

%% Log relevant data
LogEnvironment.EnvironmentConditions = EnvironmentConditions;
LogEnvironment.EnvironmentStatesDerivatives = EnvironmentStatesDerivatives;
LogEnvironment.EnvironmentStates = EnvironmentStates;

end
